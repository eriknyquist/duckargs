// Generated by duckargs, invoked with the following arguments:
// -a -b -c -d -e -f -g -h

#include <stdbool.h>
#include <getopt.h>
#include <stdlib.h>
#include <stdio.h>

static bool a = false;
static bool b = false;
static bool c = false;
static bool d = false;
static bool e = false;
static bool f = false;
static bool g = false;
static bool h = false;

void print_usage(void)
{
    printf("\n");
    printf("program_name [OPTIONS]\n\n");
    printf("-a  A flag\n");
    printf("-b  A flag\n");
    printf("-c  A flag\n");
    printf("-d  A flag\n");
    printf("-e  A flag\n");
    printf("-f  A flag\n");
    printf("-g  A flag\n");
    printf("-h  A flag\n");
    printf("\n");
}

int parse_args(int argc, char *argv[])
{
    int ch;

    while ((ch = getopt(argc, argv, "abcdefgh")) != -1)
    {
        switch (ch)
        {
            case 'a':
            {
                a = true;
                break;
            }
            case 'b':
            {
                b = true;
                break;
            }
            case 'c':
            {
                c = true;
                break;
            }
            case 'd':
            {
                d = true;
                break;
            }
            case 'e':
            {
                e = true;
                break;
            }
            case 'f':
            {
                f = true;
                break;
            }
            case 'g':
            {
                g = true;
                break;
            }
            case 'h':
            {
                h = true;
                break;
            }
        }
    }

    return 0;
}

int main(int argc, char *argv[])
{
    if (argc < 2)
    {
        print_usage();
        return -1;
    }

    int ret = parse_args(argc, argv);
    if (0 != ret)
    {
        return ret;
    }

    printf("a: %s\n", a ? "true" : "false");
    printf("b: %s\n", b ? "true" : "false");
    printf("c: %s\n", c ? "true" : "false");
    printf("d: %s\n", d ? "true" : "false");
    printf("e: %s\n", e ? "true" : "false");
    printf("f: %s\n", f ? "true" : "false");
    printf("g: %s\n", g ? "true" : "false");
    printf("h: %s\n", h ? "true" : "false");

    return 0;
}

