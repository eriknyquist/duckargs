// Generated by duckargs, invoked with the following arguments:
// -f --fff 0xabc -q 0x -t --test ox2

#include <getopt.h>
#include <stdlib.h>
#include <stdio.h>

static long int fff = 0xabc;
static char *q = "0x";
static char *test = "ox2";

static struct option long_options[] =
{
    {"fff", required_argument, NULL, 'f'},
    {"test", required_argument, NULL, 't'},
    {NULL, 0, NULL, 0}
};

void print_usage(void)
{
    printf("\n");
    printf("USAGE:\n\n");
    printf("program_name [OPTIONS]\n");
    printf("\nOPTIONS:\n\n");
    printf("-f --fff [int]      An int value (default: %ld)\n", fff);
    printf("-q [string]         A string value (default: %s)\n", q ? q : "null");
    printf("-t --test [string]  A string value (default: %s)\n", test ? test : "null");
    printf("\n");
}

int parse_args(int argc, char *argv[])
{
    char *endptr = NULL;
    int ch;

    while ((ch = getopt_long(argc, argv, "f:q:t:", long_options, NULL)) != -1)
    {
        switch (ch)
        {
            case 'f':
            {
                fff = strtol(optarg, &endptr, 0);
                if (endptr && (*endptr != '\0'))
                {
                    printf("Option '-f' requires an integer argument\n");
                    return -1;
                }
                break;
            }
            case 'q':
            {
                q = optarg;
                break;
            }
            case 't':
            {
                test = optarg;
                break;
            }
        }
    }

    return 0;
}

int main(int argc, char *argv[])
{
    if (argc < 2)
    {
        print_usage();
        return -1;
    }

    int ret = parse_args(argc, argv);
    if (0 != ret)
    {
        return ret;
    }

    printf("fff: %ld\n", fff);
    printf("q: %s\n", q);
    printf("test: %s\n", test);

    return 0;
}

