# Generated by duckargs, invoked with the following arguments:
# -i --int 5 -f --float 6.6 -d --dict -t --tuple -r --return -l --lambda -n --nonlocal -q --from -c --continue -y --yield -g --global -u --del -b --class

import argparse

def main():
    parser = argparse.ArgumentParser(description='A command-line program generated by duckargs',
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)

    parser.add_argument('-i', '--int', default=5, type=int, help='an int value')
    parser.add_argument('-f', '--float', default=6.6, type=float, help='a float value')
    parser.add_argument('-d', '--dict', action='store_true', help='dict flag')
    parser.add_argument('-t', '--tuple', action='store_true', help='tuple flag')
    parser.add_argument('-r', '--return', action='store_true', help='return flag')
    parser.add_argument('-l', '--lambda', action='store_true', help='lambda flag')
    parser.add_argument('-n', '--nonlocal', action='store_true', help='nonlocal flag')
    parser.add_argument('-q', '--from', action='store_true', help='from flag')
    parser.add_argument('-c', '--continue', action='store_true', help='continue flag')
    parser.add_argument('-y', '--yield', action='store_true', help='yield flag')
    parser.add_argument('-g', '--global', action='store_true', help='global flag')
    parser.add_argument('-u', '--del', action='store_true', help='del flag')
    parser.add_argument('-b', '--class', action='store_true', help='class flag')
    args = parser.parse_args()

    print(args.intval)
    print(args.floatval)
    print(args.dictval)
    print(args.tupleval)
    print(args.returnval)
    print(args.lambdaval)
    print(args.nonlocalval)
    print(args.fromval)
    print(args.continueval)
    print(args.yieldval)
    print(args.globalval)
    print(args.delval)
    print(args.classval)

if __name__ == "__main__":
    main()

