# Generated by duckargs, invoked with the following arguments:
# -i --int 55 -f --float 4.4 -s --struct -v --void -q --for -b --break -r --return -a --auto -p --static -w --while -o --switch -t --typedef -k --double -x --signed -e --const

import argparse

def main():
    parser = argparse.ArgumentParser(description='A command-line program generated by duckargs',
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)

    parser.add_argument('-i', '--int', default=55, type=int, help='an int value')
    parser.add_argument('-f', '--float', default=4.4, type=float, help='a float value')
    parser.add_argument('-s', '--struct', action='store_true', help='struct flag')
    parser.add_argument('-v', '--void', action='store_true', help='void flag')
    parser.add_argument('-q', '--for', action='store_true', help='for flag')
    parser.add_argument('-b', '--break', action='store_true', help='break flag')
    parser.add_argument('-r', '--return', action='store_true', help='return flag')
    parser.add_argument('-a', '--auto', action='store_true', help='auto flag')
    parser.add_argument('-p', '--static', action='store_true', help='static flag')
    parser.add_argument('-w', '--while', action='store_true', help='while flag')
    parser.add_argument('-o', '--switch', action='store_true', help='switch flag')
    parser.add_argument('-t', '--typedef', action='store_true', help='typedef flag')
    parser.add_argument('-k', '--double', action='store_true', help='double flag')
    parser.add_argument('-x', '--signed', action='store_true', help='signed flag')
    parser.add_argument('-e', '--const', action='store_true', help='const flag')
    args = parser.parse_args()

    print(args.intval)
    print(args.floatval)
    print(args.struct)
    print(args.void)
    print(args.forval)
    print(args.breakval)
    print(args.returnval)
    print(args.auto)
    print(args.static)
    print(args.whileval)
    print(args.switch)
    print(args.typedef)
    print(args.double)
    print(args.signed)
    print(args.const)

if __name__ == "__main__":
    main()

